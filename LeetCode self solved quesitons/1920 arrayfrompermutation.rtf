{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1920. Build Array from Permutation\
Easy\
Given a zero-based permutation nums (0-indexed), build an array ans of the same length where ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it.\
\
A zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 (inclusive).\
\
Example 1:\
\
Input: nums = [0,2,1,5,3,4]\
Output: [0,1,2,4,5,3]\
Explanation: The array ans is built as follows: \
ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\
    = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]]\
    = [0,1,2,4,5,3]\
Example 2:\
\
Input: nums = [5,0,1,2,3,4]\
Output: [4,5,0,1,2,3]\
Explanation: The array ans is built as follows:\
ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\
    = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]]\
    = [4,5,0,1,2,3]\
*/
\f1\b0 \
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[] arr = \{0,2,1,5,3,4\};\
		System.out.println(Arrays.toString(buildArray(arr)));\
	\}\
	\
	public static int[] buildArray(int[] nums) \{\
        int ans[] =  new int[nums.length];\
        for (int i = 0; i < nums.length; i++ ) \{\
            ans[i] = nums[nums[i]];\
        \} \
        return ans;\
    \}\
    \
    \
\}\
}