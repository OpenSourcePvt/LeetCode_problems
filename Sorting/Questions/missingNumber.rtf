{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 n
\f1\b /*\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 https://leetcode.com/problems/missing-number/\
Amazone easy level question\
268. Missing Number\
Easy\
Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.\
\
Example 1:\
\
Input: nums = [3,0,1]\
Output: 2\
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.\
Example 2:\
\
Input: nums = [0,1]\
Output: 2\
Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.\
Example 3:\
\
Input: nums = [9,6,4,2,3,5,7,0,1]\
Output: 8\
Explanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.\
*/\

\f0\b0 import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[] arr3 = \{ 0,1\};\
        System.out.println(missingNumber(arr3));\
		System.out.println(Arrays.toString(arr3));\
	\}\
	\
	static int missingNumber(int[] nums) \{\
        int i = 0;\
	    while( i < nums.length) \{\
	        //check correct index of i\
	        if( nums[i] < nums.length && nums[i] != nums[nums[i]]) \{\
	            swap( nums, i, nums[i]);\
	        \}else \{\
	            i++;\
	        \}\
	    \}\
	    \
	    //search missing Number\
	    for(int index = 0; index < nums.length; index++) \{\
	        if( nums[index] != index) \{\
	            return index;\
	        \}\
	    \}\
	    \
	    return nums.length;\
    \}\
    \
	//for swapping the variables\
	static void swap(int[] arr, int first, int second) \{\
	    int temp = arr[first];\
        	arr[first] = arr[second];\
        	arr[second] = temp;\
	\}\
\}\
}