{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1572. Matrix Diagonal Sum\
Easy\
Given a square matrix mat, return the sum of the matrix diagonals.\
\
Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.\
\
Example 1:\
\
Input: mat = [[1,2,3],\
              [4,5,6],\
              [7,8,9]]\
Output: 25\
Explanation: Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25\
Notice that element mat[1][1] = 5 is counted only once.\
Example 2:\
\
Input: mat = [[1,1,1,1],\
              [1,1,1,1],\
              [1,1,1,1],\
              [1,1,1,1]]\
Output: 8\
Example 3:\
\
Input: mat = [[5]]\
Output: 5\
*/
\f1\b0 \
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[][] arr = \{\
	       \{6,3,1,10,7,4\},\{4,10,1,9,5,10\},\{5,5,7,3,8,5\},\{2,7,6,4,7,6\},\{7,9,6,1,8,5\},\{1,7,9,5,8,4\}\
	    \};\
	    System.out.println(diagonalSum(arr));\
	\}\
	public static int diagonalSum(int[][] mat) \{\
        int sum = 0;\
        if( mat.length == 1 && mat[0].length == 1) \{\
            return mat[0][0];\
        \}\
        for( int i = 0;i< mat.length; i++) \{\
            for(int j = 0; j < mat[0].length; j++) \{\
                if(mat.length/2 == i && mat[0].length/2 == j && mat[0].length % 2 != 0) \{\
                    sum = sum + mat[i][j];\
                    break;\
                \}else if( i == j) \{\
                    sum = sum + mat[i][j];\
                    sum = sum + mat[i][mat[0].length - i - 1];\
                    break;\
                \}\
            \}\
        \}\
        return sum;\
    \}\
\}\
}