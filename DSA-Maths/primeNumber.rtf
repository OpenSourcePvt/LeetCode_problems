{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
Optimized code for printing prime numbers\
Upto sqrt(n)\
And making true if it is prime not prime\
*/
\f1\b0 \
\
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int n = 37;\
	    boolean[] primes = new boolean[n + 1]; //initially it is false array\
	    sieve( n, primes);\
	\}\
	\
	//false in array means number is prime\
	static void sieve( int n, boolean[] primes) \{\
	    for ( int i = 2; i * i <= n; i++) \{\
	        if ( !primes[i]) \{\
	            for ( int j = i * 2; j <= n; j += i) \{\
	                primes[j] = true;\
	            \}\
	        \}\
	    \}\
	    \
	    for( int i = 2 ; i <= n; i++) \{\
	        if ( !primes[i]) \{\
	            System.out.print(i + " ");\
	        \}\
	    \}\
	\}\
\}}