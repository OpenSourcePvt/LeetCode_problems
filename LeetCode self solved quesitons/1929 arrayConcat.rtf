{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1929. Concatenation of Array\
Easy\
\
Given an integer array nums of length n, you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n (0-indexed).\
\
Specifically, ans is the concatenation of two nums arrays.\
\
Return the array ans.\
\
 \
\
Example 1:\
\
Input: nums = [1,2,1]\
Output: [1,2,1,1,2,1]\
Explanation: The array ans is formed as follows:\
- ans = [nums[0],nums[1],nums[2],nums[0],nums[1],nums[2]]\
- ans = [1,2,1,1,2,1]\
Example 2:\
\
Input: nums = [1,3,2,1]\
Output: [1,3,2,1,1,3,2,1]\
Explanation: The array ans is formed as follows:\
- ans = [nums[0],nums[1],nums[2],nums[3],nums[0],nums[1],nums[2],nums[3]]\
- ans = [1,3,2,1,1,3,2,1]\
*/
\f1\b0 \
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[] arr = \{1,2,1\};\
	    System.out.println(Arrays.toString(getConcatenation(arr)));\
	\}\
\
    public static int[] getConcatenation(int[] nums) \{\
        int len = nums.length;\
        int[] ans = new int[nums.length*2];\
        for (int i = 0; i < nums.length ; i++ ) \{\
            ans[i] = nums[i];\
        \}\
        for (int i = len, count = len; i < ans.length ; i++, count-- ) \{\
            ans[i] = nums[len - count];\
        \} \
        return ans;\
    \}\
    \
\}\
}