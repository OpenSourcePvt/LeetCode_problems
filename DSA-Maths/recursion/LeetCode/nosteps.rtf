{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1342. Number of Steps to Reduce a Number to Zero\
Easy\
\
Given an integer num, return the number of steps to reduce it to zero.\
\
In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.\
\
 \
\
Example 1:\
\
Input: num = 14\
Output: 6\
Explanation: \
Step 1) 14 is even; divide by 2 and obtain 7. \
Step 2) 7 is odd; subtract 1 and obtain 6.\
Step 3) 6 is even; divide by 2 and obtain 3. \
Step 4) 3 is odd; subtract 1 and obtain 2. \
Step 5) 2 is even; divide by 2 and obtain 1. \
Step 6) 1 is odd; subtract 1 and obtain 0.\
Example 2:\
\
Input: num = 8\
Output: 4\
Explanation: \
Step 1) 8 is even; divide by 2 and obtain 4. \
Step 2) 4 is even; divide by 2 and obtain 2. \
Step 3) 2 is even; divide by 2 and obtain 1. \
Step 4) 1 is odd; subtract 1 and obtain 0.\
\
02/20/2022 10:03	Accepted	0 ms	39 MB	java\
*/\

\f1\b0 public class Main\
\{\
	public static void main(String[] args) \{\
	    System.out.println(countSteps(14, 0));\
	\}\
	static int countSteps(int num, int count) \{\
        if( num == 0) \{\
            return count;\
        \}\
        if ( (num & 1) == 1)\{\
           return countSteps(num - 1, count + 1);\
        \}\
       return countSteps(num / 2, count + 1);\
    \}\
\}\
}