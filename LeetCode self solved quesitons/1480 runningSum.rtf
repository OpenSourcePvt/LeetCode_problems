{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1480. Running Sum of 1d Array\
Easy\
Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]\'85nums[i]).\
\
Return the running sum of nums.\
\
 \
\
Example 1:\
\
Input: nums = [1,2,3,4]\
Output: [1,3,6,10]\
Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].\
Example 2:\
\
Input: nums = [1,1,1,1,1]\
Output: [1,2,3,4,5]\
Explanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].\
Example 3:\
\
Input: nums = [3,1,2,10,1]\
Output: [3,4,6,16,17]\
*/
\f1\b0 \
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[] arr = \{1,2,3,4\};\
	    System.out.println(Arrays.toString(runningSum(arr)));\
	\}\
\
public static int[] runningSum(int[] nums) \{\
        int s = 0;\
        int[] ans = new int[nums.length];\
        for (int i = 0; i < nums.length ; i++ ) \{\
            s = sum(s,nums[i]);\
            ans[i] = s;\
        \}\
        return ans;\
    \}\
    \
    static int sum(int sum, int element) \{\
        return sum + element;\
    \}\
    \
\}\
}