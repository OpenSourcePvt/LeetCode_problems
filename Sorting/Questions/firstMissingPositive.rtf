{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
https://leetcode.com/problems/first-missing-positive/\
Amazone hard level question\
41. First Missing Positive\
Hard\
\
Given an unsorted integer array nums, return the smallest missing positive integer.\
\
You must implement an algorithm that runs in O(n) time and uses constant extra space.\
\
 \
\
Example 1:\
\
Input: nums = [1,2,0]\
Output: 3\
Example 2:\
\
Input: nums = [3,4,-1,1]\
Output: 2\
Example 3:\
\
Input: nums = [7,8,9,11,12]\
Output: 1\
 \
\
Constraints:\
\
1 <= nums.length <= 5 * 105\
-231 <= nums[i] <= 231 - 1\
*/\
// 02/07/2022 17:29	Accepted	3 ms	126.3 MB	java
\f1\b0 \
\
import java.util.Arrays;\
import java.util.List;\
import java.util.ArrayList;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[] arr3 = \{ 1,1\};\
        System.out.println(firstMissingPositive(arr3));\
		System.out.println(Arrays.toString(arr3));\
	\}\
	\
static int firstMissingPositive(int[] nums) \{\
        int i = 0;\
	    while( i < nums.length) \{\
	        //check correct index of i\
	        if( nums[i] > 0 && nums[i] <= nums.length && nums[i] != nums[ nums[i] - 1]) \{\
	            swap( nums, i, nums[i] - 1);\
	        \}else \{\
	            i++;\
	        \}\
	    \}\
	    \
	    //search missing Number\
	    for(int index = 0; index < nums.length; index++) \{\
	        if( nums[index] != index + 1) \{\
	            return index + 1;\
	        \}\
	    \}\
	    \
	    return nums.length + 1;\
    \}\
\
	//for swapping the variables\
	static void swap(int[] arr, int first, int second) \{\
	    int temp = arr[first];\
        	arr[first] = arr[second];\
        	arr[second] = temp;\
	\}\
\}\
}