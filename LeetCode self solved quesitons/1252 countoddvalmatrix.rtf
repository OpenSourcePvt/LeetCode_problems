{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1252. Cells with Odd Values in a Matrix\
Easy\
There is an m x n matrix that is initialized to all 0's. There is also a 2D array indices where each indices[i] = [ri, ci] represents a 0-indexed location to perform some increment operations on the matrix.\
\
For each location indices[i], do both of the following:\
\
Increment all the cells on row ri.\
Increment all the cells on column ci.\
Given m, n, and indices, return the number of odd-valued cells in the matrix after applying the increment to all locations in indices.\
\
Example 1:\
\
Input: m = 2, n = 3, indices = [[0,1],[1,1]]\
Output: 6\
Explanation: Initial matrix = [[0,0,0],[0,0,0]].\
After applying first increment it becomes [[1,2,1],[0,1,0]].\
The final matrix is [[1,3,1],[1,3,1]], which contains 6 odd numbers.\
Example 2:\
\
Input: m = 2, n = 2, indices = [[1,1],[0,0]]\
Output: 0\
Explanation: Final matrix = [[2,2],[2,2]]. There are no odd numbers in the final matrix.\
*/
\f1\b0 \
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int m = 2; \
	    int n = 2;\
	    int[][] indices = \{\
	        \{1,1\},\
	        \{0,0\}\
	    \};\
	    System.out.println(oddCells(m,n,indices));\
	\}\
	\
	public static int oddCells(int m, int n, int[][] indices) \{\
        int[][] resultant = new int[m][n];\
        for(int[] row: indices) \{\
            int r = row[0];\
            int c = row[1];\
            for(int i = 0; i < m;i++) \{\
                for(int j = 0; j < n; j++)\{\
                    if( i == r) \{\
                        resultant[i][j]++; \
                    \}\
                    if( j == c) \{\
                        resultant[i][j]++; \
                    \}\
                \}\
            \}\
        \}\
        int count=0;\
        for(int i = 0; i < m;i++) \{\
                for(int j = 0; j < n; j++)\{\
                   if(resultant[i][j] % 2 != 0) \{\
                       count++;\
                   \}\
                \}\
            \}\
        return count;\
    \}\
\}\
}