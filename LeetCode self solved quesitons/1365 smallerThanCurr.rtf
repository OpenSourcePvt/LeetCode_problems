{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1365. How Many Numbers Are Smaller Than the Current Number\
Easy\
Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i].\
\
Return the answer in an array.\
\
Example 1:\
\
Input: nums = [8,1,2,2,3]\
Output: [4,0,1,1,3]\
Explanation: \
For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). \
For nums[1]=1 does not exist any smaller number than it.\
For nums[2]=2 there exist one smaller number than it (1). \
For nums[3]=2 there exist one smaller number than it (1). \
For nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).\
Example 2:\
\
Input: nums = [6,5,4,8]\
Output: [2,1,0,3]\
Example 3:\
\
Input: nums = [7,7,7,7]\
Output: [0,0,0,0]\
*/
\f1\b0 \
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int[] arr = \{8,1,2,2,3\};\
	    System.out.println(Arrays.toString(smallerNumbersThanCurrent(arr)));\
	\}\
	\
	public static int[] smallerNumbersThanCurrent(int[] nums) \{\
	    int[] res = new int[nums.length];\
        for (int i = 0; i < nums.length; i++) \{\
            int count = 0;\
            for(int j = 0; j < nums.length; j++) \{\
                if( nums[i] > nums[j]) \{\
                    count++;\
                \}\
            \}\
            res[i] = count;\
        \} \
        return res;\
    \}\
\}\
}