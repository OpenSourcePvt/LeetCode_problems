{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
Reverse a number using recursion\
*/
\f1\b0 \
public class Main\
\{\
	public static void main(String[] args) \{\
	   // reverse(1234);\
	   //System.out.println(sum);\
	   System.out.println(reverse2(1234));\
	\}\
	\
	static int sum = 0;\
	static void reverse(int n) \{\
	    if ( n == 0) \{\
	        return;\
	    \}\
	    int rem = n % 10;\
	    sum = sum * 10 + rem;\
	    reverse ( n / 10);\
	\}\
	\
	static int reverse2(int n) \{\
	    // sometimes you might need some additonal virables in the argument\
	    // in that case make another helper function\
	    \
	    return helper(n,(int)(Math.log10(n)) + 1);\
	\}\
	\
	static int helper(int n, int digits) \{\
	    if ( n == 0) \{\
	        return n;\
	    \}\
	    return (n % 10) * (int)(Math.pow( 10, digits - 1)) + helper(n / 10, digits - 1);\
	\}\
\}\
}