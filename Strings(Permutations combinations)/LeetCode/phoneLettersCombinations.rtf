{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww30460\viewh15780\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
Mostly asked in google interview\
17. Letter Combinations of a Phone Number\
Medium\
\
Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.\
\
A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\
\
Example 1:\
\
Input: digits = "23"\
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]\
Example 2:\
\
Input: digits = ""\
Output: []\
Example 3:\
\
Input: digits = "2"\
Output: ["a","b","c"]\
*/
\f1\b0 \
import java.util.ArrayList;\
import java.util.List;\
public class Main\
\{\
	public static void main(String[] args) \{\
	   // pad("", "123");\
	   //System.out.println(letterCombinations("123"));\
	   //System.out.println(countPad("","123"));\
	   //dice("",6);\
	   System.out.println(diceArray("",6));\
	\}\
	\
    static List<String> letterCombinations(String digits) \{\
        return pad("",digits);\
    \}\
    \
    static List<String> pad(String processed, String unprocessed) \{\
        if( unprocessed.isEmpty()) \{\
            ArrayList<String> list = new ArrayList<>();\
            list.add(processed);\
            return list;\
        \}\
        int digit = unprocessed.charAt(0) - '0'; //This will convert '2' to 2\
        ArrayList<String> ans = new ArrayList<>();\
        for( int i = (digit - 1) * 3; i < digit * 3; i++) \{\
            char ch = (char) ( 'a' + i);\
            ans.addAll(pad(processed + ch, unprocessed.substring(1)));\
        \}\
        \
        return ans;\
    \}\
\
\
    static int countPad(String processed, String unprocessed) \{\
        if( unprocessed.isEmpty()) \{\
            return 1;\
        \}\
        int digit = unprocessed.charAt(0) - '0'; //This will convert '2' to 2\
        int count = 0;\
        for( int i = (digit - 1) * 3; i < digit * 3; i++) \{\
            char ch = (char) ( 'a' + i);\
            count = count + countPad(processed + ch, unprocessed.substring(1));\
        \}\
        \
        return count;\
    \}\
    \
    static void dice(String processed, int target) \{\
        if( target == 0) \{\
            System.out.println(processed);\
            return;\
        \}\
        \
        for( int i = 1; i <= 6 && i <= target; i++) \{\
            dice(processed + i, target - i);\
        \}\
    \}\
    \
    static List<String> diceArray(String processed, int target) \{\
        if( target == 0) \{\
            ArrayList<String> list = new ArrayList<>();\
            list.add(processed);\
            return list;\
        \}\
        ArrayList<String> ans = new ArrayList<>();\
        for( int i = 1; i <= 6 && i <= target; i++) \{\
            ans.addAll(diceArray(processed + i, target - i));\
        \}\
        \
        return ans;\
    \}\
\}\
}