{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1431. Kids With the Greatest Number of Candies\
Easy\
There are n kids with candies. You are given an integer array candies, where each candies[i] represents the number of candies the ith kid has, and an integer extraCandies, denoting the number of extra candies that you have.\
\
Return a boolean array result of length n, where result[i] is true if, after giving the ith kid all the extraCandies, they will have the greatest number of candies among all the kids, or false otherwise.\
\
Note that multiple kids can have the greatest number of candies.\
Example 1:\
\
Input: candies = [2,3,5,1,3], extraCandies = 3\
Output: [true,true,true,false,true] \
Explanation: If you give all extraCandies to:\
- Kid 1, they will have 2 + 3 = 5 candies, which is the greatest among the kids.\
- Kid 2, they will have 3 + 3 = 6 candies, which is the greatest among the kids.\
- Kid 3, they will have 5 + 3 = 8 candies, which is the greatest among the kids.\
- Kid 4, they will have 1 + 3 = 4 candies, which is not the greatest among the kids.\
- Kid 5, they will have 3 + 3 = 6 candies, which is the greatest among the kids.\
Example 2:\
\
Input: candies = [4,2,1,1,2], extraCandies = 1\
Output: [true,false,false,false,false] \
Explanation: There is only 1 extra candy.\
Kid 1 will always have the greatest number of candies, even if a different kid is given the extra candy.\
Example 3:\
\
Input: candies = [12,1,12], extraCandies = 10\
Output: [true,false,true]\
*/
\f1\b0 \
import java.util.Arrays;\
import java.util.List;\
import java.util.ArrayList;\
public class Main\
\{\
	public static void main(String[] args) \{\
	    int extraCandies = 1;\
	    int[] arr = \{4,2,1,1,2\};\
	    System.out.println(kidsWithCandies(arr, extraCandies));\
	\}\
	\
	public static List<Boolean> kidsWithCandies(int[] candies, int extraCandies) \{\
	    ArrayList<Boolean> list = new ArrayList<>();\
	    int max = max(candies);\
        for (int i = 0; i < candies.length; i++) \{\
            if (max <= candies[i] + extraCandies) \{\
                list.add(true);\
            \}else \{\
                list.add(false);\
            \}\
        \} \
        return list;\
        \
    \}\
    \
    static int max(int[] candies) \{\
        int max = candies[0];\
        for(int element: candies) \{\
            if( max < element) \{\
                max = element;\
            \}\
        \}\
        return max;\
    \}\
\}\
}