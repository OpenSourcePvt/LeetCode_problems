{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
To check whether the numbder is the power of 2\
solution 1 \
number >> 1 till the number is > 0 and if it is number & 1 == 1 return True\
Time Complexity in terms of bits O(N)\
\
solution 2 // one step solution\
if Number & (Number - 1) == 0 Then it is a power of 2\
Time Complexity in terms of bits O(1) far better than solution 1\
*/\
\

\f1\b0 public class Main\
\{\
	public static void main(String[] args) \{\
	    int number = 2;\
	    boolean isPower = false;\
	    \
	   //// Solution 1 This is by shifting\
	   // while( number > 0) \{\
	   //     if( (number & 1) == 1) \{\
	   //         isPower = true;\
	   //     \}\
	   //     isPower = false;\
	   //     number >>= 1;\
	   // \}\
	   // System.out.println(isPower);\
	    \
	    \
	   // Solution 2 Optimized code\
	    if( ( number & ( number - 1) ) == 0 && number > 0) \{\
	       System.out.println(true);\
	    \} else \{\
	       System.out.println(false);\
	    \}\
	\}\
\}}