{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
66. Plus One\
Easy\
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.\
\
Increment the large integer by one and return the resulting array of digits.\
Example 1:\
\
Input: digits = [1,2,3]\
Output: [1,2,4]\
Explanation: The array represents the integer 123.\
Incrementing by one gives 123 + 1 = 124.\
Thus, the result should be [1,2,4].\
Example 2:\
\
Input: digits = [4,3,2,1]\
Output: [4,3,2,2]\
Explanation: The array represents the integer 4321.\
Incrementing by one gives 4321 + 1 = 4322.\
Thus, the result should be [4,3,2,2].\
Example 3:\
\
Input: digits = [9]\
Output: [1,0]\
Explanation: The array represents the integer 9.\
Incrementing by one gives 9 + 1 = 10.\
Thus, the result should be [1,0].\
\
Constraints:\
1 <= digits.length <= 100\
0 <= digits[i] <= 9\
digits does not contain any leading 0's.\
*/
\f1\b0 \
import java.util.Arrays;\
public class Main\
\{\
	public static void main(String[] args) \{\
		int[] digits= \{8,9,9\};\
		System.out.println(Arrays.toString(plusOne(digits)));\
	\}\
	public static int[] plusOne(int[] digits) \{\
	    digits[digits.length - 1]++;\
	    for (int i = digits.length - 1; i >= 0; i--) \{\
	        if(digits[i] == 10 && i != 0) \{\
	            digits[i] = 0;\
	            digits[i - 1]++;\
	        \}\
	    \}\
        if(digits[0] == 10) \{\
            digits = new int[digits.length + 1];\
            digits[0] = 1;\
            digits[1] = 0;\
        \}\
        return digits;\
    \}\
\}\
}