{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 /*\
1732. Find the Highest Altitude\
Easy\
There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.\
\
You are given an integer array gain of length n where gain[i] is the net gain in altitude between points i\uc0\u8203 \u8203 \u8203 \u8203 \u8203 \u8203  and i + 1 for all (0 <= i < n). Return the highest altitude of a point.\
\
 \
\
Example 1:\
\
Input: gain = [-5,1,5,0,-7]\
Output: 1\
Explanation: The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.\
Example 2:\
\
Input: gain = [-4,-3,-2,-1,4,3,2]\
Output: 0\
Explanation: The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.\
*/
\f1\b0 \
public class Main\
\{\
	public static void main(String[] args) \{\
	   int[] arr = \{-4,-3,-2,-1,4,3,2\};\
	   System.out.println(largestAltitude(arr));\
	    \
	\}\
	public static int largestAltitude(int[] gain) \{\
        int[] resultantArr = new int[gain.length + 1];\
        resultantArr[0] = 0;\
        for(int i = 1; i < resultantArr.length;i++) \{\
            resultantArr[i] = resultantArr[i-1] + gain[i-1];\
        \}\
        return max(resultantArr);\
    \}\
    \
    static int max(int[] arr) \{\
        int max = arr[0];\
        for( int i = 1;i < arr.length;i++) \{\
            if(max < arr[i]) \{\
                max = arr[i];\
            \}\
        \}\
        return max;\
    \}\
\}\
}