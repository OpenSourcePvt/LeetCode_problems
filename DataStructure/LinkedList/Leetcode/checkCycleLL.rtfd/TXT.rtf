{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue-Medium;\f2\fmodern\fcharset0 Courier-Bold;
\f3\fnil\fcharset0 HelveticaNeue-BoldItalic;\f4\fnil\fcharset0 Menlo-Bold;\f5\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red55\green146\blue55;
\red67\green91\blue103;\red29\green38\blue42;\red245\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c26275\c62745\c27843;
\cssrgb\c32941\c43137\c47843;\cssrgb\c14902\c19608\c21961;\cssrgb\c96863\c97647\c98039;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18240\viewh12140\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 141.\'a0Linked List Cycle\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f1\b0\fs26 \cf4 \cb3 \strokec4 Easy
\f0\b\fs24 \cf5 \cb1 \strokec5 \
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf6 \cb3 \strokec6 Given\'a0
\f2\fs26 \cf5 \cb7 \strokec5 head
\f0\fs28 \cf6 \cb3 \strokec6 , the head of a linked list, determine if the linked list has a cycle in it.\cb1 \
\cb3 There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the\'a0
\f2\fs26 \cf5 \cb7 \strokec5 next
\f0\fs28 \cf6 \cb3 \strokec6 \'a0pointer. Internally,\'a0
\f2\fs26 \cf5 \cb7 \strokec5 pos
\f0\fs28 \cf6 \cb3 \strokec6 \'a0is used to denote the index of the node that\'a0tail's\'a0
\f2\fs26 \cf5 \cb7 \strokec5 next
\f0\fs28 \cf6 \cb3 \strokec6 \'a0pointer is connected to.\'a0Note that\'a0
\f2\fs26 \cf5 \cb7 \strokec5 pos
\f0\fs28 \cf6 \cb3 \strokec6 \'a0is not passed as a parameter.\cb1 \
\cb3 Return\'a0
\f2\fs26 \cf5 \cb7 \strokec5 true
\f3\i\fs28 \cf6 \cb3 \strokec6 \'a0if there is a cycle in the linked list
\f0\i0 . Otherwise, return\'a0
\f2\fs26 \cf5 \cb7 \strokec5 false
\f0\fs28 \cf6 \cb3 \strokec6 .\cb1 \
\cb3 \'a0\cb1 \
\cb3 Example 1:\cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \
\pard\pardeftab720\sl416\partightenfactor0

\f4\fs26 \cf6 \cb7 Input: head = [3,2,0,-4], pos = 1\
Output: true\
Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf6 \cb3 Example 2:\cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \pard\pardeftab720\partightenfactor0
\cf6 \
\pard\pardeftab720\sl416\partightenfactor0

\f4\fs26 \cf6 \cb7 Input: head = [1,2], pos = 0\
Output: true\
Explanation: There is a cycle in the linked list, where the tail connects to the 0th node.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\fs28 \cf6 \cb3 Example 3:\cb1 \
\pard\pardeftab720\partightenfactor0
\cf6 \pard\pardeftab720\partightenfactor0
\cf6 \
\pard\pardeftab720\sl416\partightenfactor0

\f4\fs26 \cf6 \cb7 Input: head = [1], pos = -1\
Output: false\
Explanation: There is no cycle in the linked list.\
\
\
\pard\pardeftab720\sl416\partightenfactor0

\f5\b0 \cf6 /**\
 * Definition for singly-linked list.\
 * class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{\
 *         val = x;\
 *         next = null;\
 *     \}\
 * \}\
 */\
public class Solution \{\
    public boolean hasCycle(ListNode head) \{\
        \
        ListNode fast = head;\
        ListNode slow = head;\
        \
        while(  fast != null && fast.next != null) \{\
            fast = fast.next.next;\
            slow = slow.next;\
            if( fast == slow) \{\
                return true;\
            \}\
        \}\
        \
        return false;\
    \}\
\}}